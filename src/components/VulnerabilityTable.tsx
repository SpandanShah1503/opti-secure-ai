import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";

interface Vulnerability {
  id: string;
  cve: string;
  device: string;
  severity: "Critical" | "High" | "Medium" | "Low";
  location: string;
  status: "Open" | "Mitigated" | "False Positive";
}

const vulnerabilities: Vulnerability[] = [
  {
    id: "1",
    cve: "CVE-2024-1234",
    device: "Hikvision DS-2CD2142FWD",
    severity: "Critical",
    location: "New York, USA",
    status: "Open",
  },
  {
    id: "2",
    cve: "CVE-2024-5678",
    device: "Dahua IPC-HFW1230S",
    severity: "High",
    location: "London, UK",
    status: "Open",
  },
  {
    id: "3",
    cve: "CVE-2023-9012",
    device: "Axis M3045-V",
    severity: "Medium",
    location: "Tokyo, Japan",
    status: "Mitigated",
  },
  {
    id: "4",
    cve: "CVE-2024-3456",
    device: "Samsung SNB-6004",
    severity: "High",
    location: "Berlin, Germany",
    status: "Open",
  },
  {
    id: "5",
    cve: "CVE-2023-7890",
    device: "Bosch DINION IP 5000",
    severity: "Low",
    location: "Sydney, Australia",
    status: "False Positive",
  },
];

const getSeverityVariant = (severity: string) => {
  switch (severity) {
    case "Critical":
      return "destructive";
    case "High":
      return "destructive";
    case "Medium":
      return "default";
    case "Low":
      return "secondary";
    default:
      return "default";
  }
};

const getStatusVariant = (status: string) => {
  switch (status) {
    case "Open":
      return "destructive";
    case "Mitigated":
      return "default";
    case "False Positive":
      return "secondary";
    default:
      return "default";
  }
};

const VulnerabilityTable = () => {
  return (
    <Card className="shadow-card">
      <CardHeader>
        <CardTitle className="text-xl font-semibold">Recent Vulnerabilities</CardTitle>
      </CardHeader>
      <CardContent>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>CVE ID</TableHead>
              <TableHead>Device</TableHead>
              <TableHead>Severity</TableHead>
              <TableHead>Location</TableHead>
              <TableHead>Status</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {vulnerabilities.map((vuln) => (
              <TableRow key={vuln.id}>
                <TableCell className="font-mono text-sm">{vuln.cve}</TableCell>
                <TableCell className="font-medium">{vuln.device}</TableCell>
                <TableCell>
                  <Badge variant={getSeverityVariant(vuln.severity)}>
                    {vuln.severity}
                  </Badge>
                </TableCell>
                <TableCell className="text-muted-foreground">{vuln.location}</TableCell>
                <TableCell>
                  <Badge variant={getStatusVariant(vuln.status)}>
                    {vuln.status}
                  </Badge>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  );
};

export default VulnerabilityTable;
